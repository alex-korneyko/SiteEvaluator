// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiteEvaluator.Data.DataBaseContext;

namespace SiteEvaluator.Data.Migrations
{
    [DbContext(typeof(SiteEvaluatorDbContext))]
    partial class SiteEvaluatorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SiteEvaluator.Data.Model.PageInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("ScannerType")
                        .HasColumnType("int");

                    b.Property<string>("SourceHost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TotalLoadTime")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalSize")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PageInfos");
                });

            modelBuilder.Entity("SiteEvaluator.Data.Model.PageInfoUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PageInfoId")
                        .HasColumnType("int");

                    b.Property<int>("PageInfoUrlType")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PageInfoId");

                    b.ToTable("PageInfoUrls");
                });

            modelBuilder.Entity("SiteEvaluator.Data.Model.PageInfoUrl", b =>
                {
                    b.HasOne("SiteEvaluator.Data.Model.PageInfo", "PageInfo")
                        .WithMany("PageInfoUrls")
                        .HasForeignKey("PageInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PageInfo");
                });

            modelBuilder.Entity("SiteEvaluator.Data.Model.PageInfo", b =>
                {
                    b.Navigation("PageInfoUrls");
                });
#pragma warning restore 612, 618
        }
    }
}
